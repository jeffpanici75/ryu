THINGS TO DO
------------

Project & Admin tasks
---------------------

- Flesh out README.md for GitHub

- Create website for Ryu project

- Add Ryu & other project information to Twitch profile & banner bitmap

- configure weechat to limit width of handles to prevent column scrunching

Thoughts & Questions
----------------------

- should ROM even be write protected during "development"?
    * should we issue errors when trying to write unlatched ROM
    * maybe the write latch should be disabled only during emulation/distribution
    * OR maybe the write latch is controlled through the environment file

IDE UI & related tasks
----------------------

- implement core::environment::on_memory_map to dump
  out the memory map of the active machine

- when switching env, actually assemble file

- encapsulate SDL_Event into core::event so we don't bleed SDL stuff everywhere
    - need to explicitly filter out non-ASCII characters during input
    - implement mouse events for context tabs

- core::document changes:
    - refactor core::document to implement "piece table" model which should get us undo/redo/cut/copy/paste in a much
      nicer model and api.
    - implement marks in document and surface in console & text_editor for quick navigation
    - implement selection/cut/copy/paste in text_editor view and console view.
    - core::console & core::text_editor
        - columnar output should be based on column spans instead of spaces for formatting

    MEAT COMPUTER STACK
    -------------------
    - refactoring/consolidating the attr_chunk_t/attr_chunks & text_formatter::formatted_text_t/formatted_text_span_t
      to one interface so all UI elements using document work the same way.

- implement ability to redirect to new or appended text file in core::console

- bug: console header, project and machine fields not properly resizing

- figure out how to surface errors & other messages for display in editors, e.g. source_editor, memory_editor.

- implement the memory_editor controller & view.  need a listener interface on memory_mapper that notifies registered
  listeners that memory has changed.

- implement remaining memory commands in core::environment

- implement full & correct machine editor interface

- implement full & correct project editor interface + shortcut selection UI

- implement palette editor

- implement tile/sprite editor

- implement preferences UI

- look for good tab-like bitmaps instead of poly draws

Emulator & related tasks
------------------------

- implement integrated_circuit subclass for midway_mcr_video_generator that displays background map of tiles &
  foreground layer of sprites, controller initially through memory_editor & commands

- implement integrated_circuit subclass for joystick input

DONE
----
- create new struct that packages up source text/stream to parse, chunked lines, and formatted lines
- core::environment now has fields for core::command_parser and core::evaluator and optimized assignment of
  symbol table and assembler pointers to these instances.
- OFFSTREAM: categorize help and ordering so they're consistent
- OFFSTREAM: added @[.b|.w|.dw] for peek
- OFFSTREAM: added ^[.b|.w|.dw] for poke
- OFFSTREAM: implemented core::environment::fill_memory
- implement a target command so that assembly isn't necessarily required
- implement help [cmd] detail variant
- implement core::environment::on_read_binary_to_memory
- OFF STREAM|FIXED: fmt::format should recognize our custom types because we have a std::ostream operator<< override.
                    however, it isn't working the way I'd expect, so need to research.
                    SOLUTION: was missing #include <fmt/ostream.h>
- OFF STREAM|FIXED: core::console now formats styled text correctly!
- OFF STREAM      : more behavior in console is now optional and activated by using the @| operator
- OFF STREAM      : added @> and @>> redirection operators to console commands
- OFF STREAM|FIXED: font_family::add_style now uses space to get a proper width measurement
- OFF STREAM|FIXED: core::console and core::text_editor now measure the chunks to get the most accurate width
- OFF STREAM      : updated to latest Hack font TTF files
- OFF STREAM|FIXED: parser wasn't setting _token to nullptr in reset.
- OFF STREAM      : implement dip_switch subclass for integrated_circuit
- implement core::environment::on_write_memory_to_binary
- implement core::environment::on_copy_memory
- implement core::environment::on_search_memory
